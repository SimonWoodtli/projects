#!/usr/bin/node

const https = require('https');
const http = require('http');
// hide my apikey
const api = require("./api.json")

function printWeather(weather) {
  console.log(`The weather in ${weather.name} is ${weather.main.temp} degree Celsius.`)
}

function printError(error) {
  console.error(error.message)
}

function get() {
  try {
    const args = process.argv.slice(2).join(" ")
    const query = Number(args) || args
    const urls = [ `https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${api.apiKey}&units=metric`, `https://api.openweathermap.org/data/2.5/weather?zip=${query}&appid=${api.apiKey}&units=metric` ]
    const url = (typeof query === "string") ? urls[0] : urls[1];

    https.get(url, (res) => {
      // check server response
      if (res.statusCode === 200) {
        let body = ""
        res.on('data', (d) => {
          body += d.toString()

        });
        res.on("end", () => {
          try {
          let weather = JSON.parse(body)
              printWeather(weather)
          } catch (error) {
            // Parser error
            printError(error)
          }
        })
      } else {
        // Status code error, also throws error if argument in CLI not
        // valid
        const statusErrorCode = new Error(`There was an error getting the message for "${query}". (${http.STATUS_CODES[res.statusCode]})`);
        printError(statusErrorCode)

      }

    }).on('error', (e) => {
      console.error(e);
    });
  } catch (error) {
    printError(error)
  }
}
// if I were to use an app.js file and then import this file into it the
// export statement is needed
// module.exports.get = get
get()
// Todo: Handle any errors
